const portfolio = [
  {
    id: 1,
    projectName: "Hostinger Cloud Platform",
    url: "https://hostinger.com/",
    image: "projects/new/hostinger.png",
    projectDetail:
      "Led the architectural design and development of Hostinger's platform, ensuring high performance and scalability. Implemented CI/CD pipelines using Jenkins and Docker, and managed cloud infrastructure on AWS. Utilized React.js with Tailwind CSS for responsive UI, and integrated RESTful APIs for dynamic content delivery.",
    technologiesUsed: [
      { tech: "React.js" },
      { tech: "Tailwind CSS" },
      { tech: "Node.js" },
      { tech: "Express.js" },
      { tech: "AWS" },
      { tech: "Docker" },
      { tech: "Jenkins" },
      { tech: "RESTful API" },
      { tech: "GitHub" },
    ],
  },
  {
    id: 2,
    projectName: "HSBC Financial Dashboard",
    url: "https://www.hsbc.com/",
    image: "projects/new/hsbc.png",
    projectDetail:
      "Developed responsive and accessible web interfaces using React.js, Redux, and TypeScript. Integrated financial data APIs and implemented secure authentication using OAuth2. Employed Jest and Enzyme for unit testing, ensuring code reliability and maintainability.",
    technologiesUsed: [
      { tech: "React.js" },
      { tech: "Redux" },
      { tech: "TypeScript" },
      { tech: "OAuth2" },
      { tech: "Jest" },
      { tech: "Enzyme" },
      { tech: "RESTful API" },
      { tech: "GitLab" },
    ],
  },
  {
    id: 3,
    projectName: "Matsuyama Interactive Website",
    url: "https://matsuyama.co/",
    image: "projects/new/matsuyama.co.png",
    projectDetail:
      "Built a dynamic website using Webflow CMS and integrated custom JavaScript for enhanced interactivity. Implemented responsive design principles to ensure seamless user experience across devices. Integrated third-party services like Marketo Forms and Greenhouse for marketing and recruitment functionalities.",
    technologiesUsed: [
      { tech: "Webflow CMS" },
      { tech: "JavaScript (ES6+)" },
      { tech: "HTML5" },
      { tech: "CSS3" },
      { tech: "Responsive Design" },
      { tech: "Marketo Forms" },
      { tech: "Greenhouse" },
    ],
  },
  {
    id: 4,
    projectName: "Vaave AWS Migration & CI/CD",
    url: "https://www.vaave.com/",
    image: "projects/new/vaave.png",
    projectDetail:
      "Migrated infrastructure to AWS EC2 instances and optimized deployment pipelines with Jenkins for efficient CI/CD processes. Configured Nginx as a reverse proxy to enhance server performance and load balancing. Integrated OAuth2 authentication for secure access control and collaborated with designers to update UI/UX.",
    technologiesUsed: [
      { tech: "AWS" },
      { tech: "Jenkins" },
      { tech: "Nginx" },
      { tech: "OAuth2" },
      { tech: "RESTful API" },
      { tech: "HTML5" },
      { tech: "CSS3" },
      { tech: "JavaScript (ES6+)" },
    ],
  },
  {
    id: 5,
    projectName: "Tojjar E-Commerce Platform",
    url: "/domain-expired",
    image: "projects/tojjar.png",
    projectDetail:
      "Developed an e-commerce platform enabling users to create stores and sell products from various brands. Utilized Next.js with SSR for improved SEO, and Laravel for robust backend operations. Implemented RESTful APIs and integrated Ant Design for a consistent UI.",
    technologiesUsed: [
      { tech: "Next.js" },
      { tech: "Laravel" },
      { tech: "RESTful API" },
      { tech: "Ant Design" },
      { tech: "Tailwind CSS" },
      { tech: "MySQL" },
      { tech: "Docker" },
    ],
  },
  {
    id: 6,
    projectName: "JMM Business Solutions",
    url: "https://jmm.ltd/",
    image: "projects/jmm.png",
    projectDetail:
      "Developed digital solutions for diverse businesses, leveraging React.js for frontend development and Laravel for backend services. Implemented RESTful APIs and utilized Material UI for responsive design. Ensured code quality through unit testing with Jest.",
    technologiesUsed: [
      { tech: "React.js" },
      { tech: "Laravel" },
      { tech: "RESTful API" },
      { tech: "Material UI" },
      { tech: "Jest" },
      { tech: "GitHub" },
    ],
  },
  {
    id: 7,
    projectName: "Fateh Travel Agency Platform",
    url: "https://fatehtour.com/",
    image: "projects/fateh.png",
    projectDetail:
      "Developed a travel agency platform using Vue.js for the frontend and Django for backend services. Implemented secure authentication with Auth0 and integrated third-party APIs for booking and visa assistance. Ensured responsive design with Tailwind CSS.",
    technologiesUsed: [
      { tech: "Vue.js" },
      { tech: "Django" },
      { tech: "Auth0" },
      { tech: "Tailwind CSS" },
      { tech: "RESTful API" },
      { tech: "MySQL" },
      { tech: "Docker" },
    ],
  },
  {
    id: 8,
    projectName: "JMM ERP System",
    url: "https://jmmerp.com/",
    image: "projects/erp.png",
    projectDetail:
      "Developed a cloud-based ERP solution using Django and GraphQL for efficient data management. Implemented RESTful APIs and utilized Tailwind CSS for responsive UI. Deployed the application on AWS and ensured scalability and performance.",
    technologiesUsed: [
      { tech: "Django" },
      { tech: "GraphQL" },
      { tech: "RESTful API" },
      { tech: "Tailwind CSS" },
      { tech: "AWS" },
      { tech: "PostgreSQL" },
      { tech: "Docker" },
    ],
  },
  {
    id: 9,
    projectName: "ABSCO Consulting Portal",
    url: "https://absco.sa/",
    image: "projects/absco.png",
    projectDetail:
      "Developed a business consulting platform using Flask for backend services and Tailwind CSS for frontend design. Implemented RESTful APIs and ensured responsive design across devices. Deployed the application on AWS for scalability.",
    technologiesUsed: [
      { tech: "Flask" },
      { tech: "Tailwind CSS" },
      { tech: "RESTful API" },
      { tech: "AWS" },
      { tech: "PostgreSQL" },
    ],
  },
  {
    id: 10,
    projectName: "Internal Management Platform",
    url: "#",
    image: "images/logo.png",
    projectDetail:
      "Engineered an internal management system for HR and operations including modules for shift scheduling, media editing, playlist handling, and user role management. Built with React, Tailwind CSS, and Node.js, and integrated with REST APIs and MongoDB. Employed Docker Compose for container orchestration and AWS EC2 for deployment.",
    technologiesUsed: [
      { tech: "React.js" },
      { tech: "Tailwind CSS" },
      { tech: "Node.js" },
      { tech: "Express.js" },
      { tech: "MongoDB" },
      { tech: "RESTful API" },
      { tech: "Docker Compose" },
      { tech: "AWS EC2" },
      { tech: "CI/CD" },
    ],
  },
  {
    id: 11,
    projectName: "Veteran Job Assistance Chatbot",
    url: "#",
    image: "images/logo.png",
    projectDetail:
      "Developed a multilingual chatbot system for American Veterans Resource Group using Django, PyTorch, and OpenAI API. Integrated Google Translate, speech-to-text, and text-to-speech features to ensure accessibility. Implemented vector search and RAG (retrieval-augmented generation) for intelligent response generation.",
    technologiesUsed: [
      { tech: "Django" },
      { tech: "MongoDB" },
      { tech: "PyTorch" },
      { tech: "Google Cloud (Speech, Translate)" },
      { tech: "OpenAI" },
      { tech: "Vector Search" },
      { tech: "RAG" },
      { tech: "RESTful API" },
    ],
  },
  {
    id: 12,
    projectName: "Blockchain Wallet & Token Platform",
    url: "#",
    image: "images/logo.png",
    projectDetail:
      "Built a secure blockchain wallet interface and token management system using Web3.js, Solidity, and Ether.js. Implemented wallet integration, smart contract interaction, and transaction history tracking. UI built with React and Wagmi for seamless Web3 onboarding.",
    technologiesUsed: [
      { tech: "React.js" },
      { tech: "Solidity" },
      { tech: "Web3.js" },
      { tech: "Ether.js" },
      { tech: "Wagmi" },
      { tech: "Node.js" },
      { tech: "Smart Contracts" },
      { tech: "MetaMask" },
    ],
  },
];

export default function handler(req, res) {
  res.status(200).json(portfolio);
}
